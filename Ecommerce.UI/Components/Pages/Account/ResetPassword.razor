@page "/account/Reset-Password"
@inject AccountServices AccountService
@rendermode InteractiveServer

<link href="css/account.css" rel="stylesheet" />
<link href="/assets/css/style.min.css" rel="stylesheet">

<main class="main login-page">
    <div class="page-content">
        <div class="container">
            <div class="login-popup">
                <EditForm Model="@resetPasswordDto" OnValidSubmit="HandleResetPassword">
                    <DataAnnotationsValidator />
                    <div class="tab tab-nav-boxed tab-nav-center tab-nav-underline">
                        <ul class="nav nav-tabs text-uppercase" role="tablist">
                            <li class="nav-item">
                                <a href="#sign-in" class="nav-link active">Đặt Lại Mật Khẩu</a>
                            </li>
                        </ul>
                        <div class="tab-content row w-100">
                            <div class="tab-pane active col-12">
                                <div class="form-group mb-0">
                                    <label>VerifiryCode *</label>
                                    <InputText @bind-Value="resetPasswordDto.VerificationCode" type="text" class="form-control"/>
                                    <ValidationMessage class="text-danger" For="@(() => resetPasswordDto.VerificationCode)" />
                                </div>
                                <div class="form-group mb-0">
                                    <label>Email *</label>
                                    <InputText @bind-Value="resetPasswordDto.Email" type="text" class="form-control"/>
                                    <ValidationMessage class="text-danger" For="@(() => resetPasswordDto.Email)" />
                                </div>
                                <div class="d-flex row g-3">
                                    <div class="form-group col-6 input_item_auth">
                                        <label>Password *</label>
                                        <InputText @bind-Value="resetPasswordDto.Password" type="@passwordFieldType" class="form-control" />
                                        <span class="fa @iconClass field-icon" @onclick="TogglePasswordVisibility"></span>
                                        <ValidationMessage class="text-danger" For="@(() => resetPasswordDto.Password)" />
                                    </div>
                                    <div class="form-group mb-0 col-6 input_item_auth">
                                        <label>Confirm Password *</label>
                                        <InputText @bind-Value="resetPasswordDto.ConfirmPassword" type="password" class="form-control" />
                                        <ValidationMessage class="text-danger" For="@(() => resetPasswordDto.ConfirmPassword)" />
                                    </div>
                                </div>
                                @if (ShowLoadingButton)
                                {
                                    <ButtonLoadingSpinner></ButtonLoadingSpinner>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary">Đặt Lại Mật Khẩu</button>
                                }
                            </div>
                        </div>

                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</main>


@code {
    private ResetPasswordDto resetPasswordDto = new ResetPasswordDto();
    private string errorMessage;
    public bool ShowLoadingButton { get; set; } = false;
    private string passwordFieldType = "password";
    private string iconClass = "fa-eye-slash";

    private async Task HandleResetPassword()
    {
        ShowLoadingButton = true;
        var result = await AccountService.ResetPasswordAsync(resetPasswordDto);
        if(result)
        {
            // Hiển thị thông báo thành công
            ToastService.ShowSuccess("Mật khẩu đã được đặt lại thành công.");
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            errorMessage = "Đã xảy ra lỗi khi đặt lại mật khẩu.";
        }
        ShowLoadingButton = false;
    }
    private void TogglePasswordVisibility()
    {
        if (passwordFieldType == "password")
        {
            passwordFieldType = "text"; // Hiển thị mật khẩu
            iconClass = "fa-eye"; // Đổi icon thành mắt mở
        }
        else
        {
            passwordFieldType = "password"; // Ẩn mật khẩu
            iconClass = "fa-eye-slash"; // Đổi icon thành mắt đóng
        }
    }
}
